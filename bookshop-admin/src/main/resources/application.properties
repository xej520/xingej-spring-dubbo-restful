#常见配置
#服务端口，也是tomcat端口号
#server.port = 8060

#配置 应用的上下文路径
#server.context-path = /admin

#超时时间 为10分钟，
#为了测试session过期时间，这里将时间，设置为10秒钟，方便测试
server.session.timeout = 60

#解决时差问题，就是date
# 有8小时的时差
spring.jackson.time-zone = GMT+8

#####-----<下面是导入了bookshop项目的application.properties配置文件里的内容>-------############

#数据库配置
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/bookshop?useUnicode=yes&charaterEncoding=UTF-8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=123456

#打开开关，这样的话，运行程序，
#就会在数据库里创建表，不然不会真正的创建表的
#启动程序时，spring会将添加了Entity注解的类，在数据库创建表的
#spring.jpa.generate-ddl=true


##使用我们自定义的表名，字段名 命名规则，
##启动这个规则
#spring.jpa.hibernate.naming.implicit-strategy=com.roncoo.support.RoncooNamingStratategy
##将执行的结果 输出到 控制台上
#spring.jpa.show-sql=true
##格式化输出
#spring.jpa.properties.hibernate.format_sql=true

#####-----<上面是导入了bookshop项目的application.properties配置文件里的内容>-------############

#--------文件上传-------
#spring boot 默认规定是，单个文件不能超过1M， 一次请求不能超过10M（一次请求可能会上传很多文件）
spring.http.multipart.max-file-size= 10MB

#-------spring security------
security.user.name = admin
security.user.password = 123456


#配置OAuth2
#使用Spring Security OAuth实现第三方登录
#appId,以及 apiKey 就是告诉微信或者QQ(腾讯)，以及github，我是谁，也就是第三方应用是谁
#就是QQ登陆中，step1中申请接入的appId
security.oauth2.client.client-id=bd1c0a783ccdd1c9b9e4 
#就是QQ登陆中，step1中申请接入的apikey
security.oauth2.client.client-secret=1a9030fbca47a5b2c28e92f19050bb77824b5ad1

#使用Spring Security OAuth实现第三方登录 ---->  需要3个地址，这3个地址，是授权服务器的地址，也就是淘宝或者github
#------>第一步
#用来获取授权码，也就是，当前用户没有登陆时，将用户 ，导向下面的地址，输入用户名和密码
#然后用户点击，登陆；
#回调我服务器的地址，这个地址是由spring security自己负责写的。
security.oauth2.client.user-authorization-uri=https://github.com/login/oauth/authorize

#------>第二步
#spring security 回调我的服务器地址(第三方应用)时，会带一个授权码，
#收到授权码后，再去访问access-token-uri地址，请求access token
#服务器(如淘宝)校验我的授权码和重定向URI都没问题后，淘宝会将accessToken发给第三方应用，
#
security.oauth2.client.access-token-uri=https://github.com/login/oauth/access_token

#------>第三步
#第三应用，还需要获取用户的openId,需要从下面的地址上，进行获取；也就是用accessToken获取用户信息的地址
security.oauth2.resource.user-info-uri=https://api.github.com/user
#security.oauth2.client.authentication-scheme=query

######注册应用时，要添加一个回调地址
#-----你发起请求的地址必须跟回调的一样，才可以的

#Spring boot 目前只支持redis类型的存储，本应用目前暂无需将session放入redis里，因此，这里设置为none
spring.session.store-type=none  


#--------------------配置缓存-------------
#如果是Simple的话，就是缓存到内存里
#配置redis，是本地的，即IP是127.0.0.1，localhost
spring.cache.type = redis

#如果配置的缓存是远程的话，就可以使用下面的方式
#spring.redis.host=
#spring.redis.port=

#配置定时任务，batch方式运行
#启动程序时，不允许
spring.batch.job.enabled=false










